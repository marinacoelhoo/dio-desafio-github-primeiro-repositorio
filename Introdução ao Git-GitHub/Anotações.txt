Git foi criado em 2005 por Linus Torvalds
É um sistema de versionamento de código distribuído.
São duas tecnologias diferentes e complementares

GITBASH (CTRL L COMANDO PARA LIMPAR O TERMINAL)

Github
é uma empresa da Microsoft
Pode ter planos pagos
Repositório online onde vamos armazenar nosso código 

Controle de versão
Armazenamento em nuvem
Trabalho em equipe
Melhorar seu código
Reconhecimento 

Interface gráfica
GUI (Graphical User Interface) X CLI (Command Line Interfafce)

Forma de interagir com o Git é por linha de comando 

COMANDOS:
lista de diretórios dentro da pasta situada
Windowns DIR
Linux LS

navegar entre as pastas (igual para todos sistemas)
- CD

limpar o terminal 
Windowns cls (clear screen)
Linux clear ou CTRL L

TAB para auto completar

CRIAR UMA PASTA
mk make directory
mkdir

silence for sucess

Printa de volta no terminal uma frase ou texto que você passa
echo

Redirecionador de fluxo 
>

Deleta apenas arquivo
del e o nome da pasta 
por exemplo del "workspace"

Deleta um repositório e todo seu conteúdo
rmdir (remove directory) e o nome da pasta 
rmdir "workspace"

flags -a
mostra arquivos ocultos, por exemplo ls -a

flags /S e /Q

LINUX
rm (remover) e junto utiliza duas flags
-rf(r recursivo, ou seja, deletar todas as pastas/arquivos contidos no diretório e f de force para não aparecer nenhum tipo de confirmação para deletar

Seta para cima
Navegar entre o histórico de comandos que já executou no terminal 


SHA1 desenvolvido pela NSA (Agência de Segurança Nacional dos EUA)
É uma forma curta de representar um arquivo, o estado de um arquivo 
openssl sha1 "nome do arquivo"

(Security Hash Algorithm)
Algoritmo de criptação
Pegar o arquivo e "embaralhar" de uma forma bem específica
A encriptação gera conjunto de chacarteres identificador de 40 dígitos

OBJETOS DO GIT
Blobs
bloco básico de composição
apontar diretórios que contém arquivos e para os arquivos também

Trees
armazena blobs
contém metadados
onde está localizado os arquivos
retém informarção de vários arquivos

Commit
objeto que junta tudo
aponta para uma tree, último commit realizado 
aponta para o autor e para uma mensagem também

Quando vc tem um commit vc garante q ninguém alterou aquele commit 

CHAVE SSH
estabelecer conexão segura e encriptada entre duas máquinas
chave pública e privada

comandos para criar chaves (utilizando git bash)
ssh-keygen -t ed25510 -C "meu email (mesmo do git)"
vai solicitar a senha 

acessar a pasta em que foi criada as chaves
Nesse caso:
cd /c/Users/Marina/.ssh/ 

comando ls para listar 
aparece a chave pública e a privada

A chave que vai expor no git é a pública, ou seja, a .pub

comando cat "id da chave", nesse caso é cat id_ed25519.pub
gerando a chave e copiando p/ utilizar no git hub

comando pwd mostra o caminho que foi utilizado para chegar na pasta que vc está

comando eval $(ssh-agent -s)
gera "Agent pid 876" - lembrando que o número pode variar, pois aqui está startando 

comando ssh-add id_ed25519
colocar senha

comando para clonar repositório 
git clone e o caminho ssh

COMANDOS GIT
iniciar o git 
git init

iniciar o versionamento 
git add

criando commit
git commit

ARQUIVO MARKDOWN
Uma forma mais "humana" de se escrever html


git status
comando mv para mover arquivo
Por exemplo
mv "nome do arquivo que deseja mover" ./ (/ para procurar outra pasta)

exemplo mv terminal.md ./introducao/


Tracked arquivos que são rastreados 
Unmodified
Ainda não foi modificado

Modified
Arquivo foi alterado

Staged
Onde fica arquivos que estão se preparando para fazer parte de outro agrupamento

Untracked 
arquivos que o GIT ainda não tem ciência deles

Comandos para mover arquivos para staged
> git add
> git add *
> git add.
